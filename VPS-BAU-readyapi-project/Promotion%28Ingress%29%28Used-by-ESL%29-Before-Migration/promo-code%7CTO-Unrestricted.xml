<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="f9cdc5c8-e156-461f-aeff-7b270cb5279c" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="promo-code|TO-Unrestricted" searchProperties="true" timeout="0" disabled="true">
  <con:settings id="f30537bd-7994-4e14-a3da-88c623612997">
    <con:setting id="f9cdc5c8-e156-461f-aeff-7b270cb5279cfileName">promo-code%7CTO-Unrestricted</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="loadTestData-promoSpecifScenario" id="49f167e8-fdc2-46dc-8463-7d5c5aee73a2">
    <con:settings/>
    <con:config>
      <script>//load/fetch test data from local source
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//get user's device OS and set directory
String osType = System.properties['os.name'][0..6];
def directory = "";

if (osType == "Windows"){
	directory = "C:/VPS_JSON/vpsTestData/"
	}
else{
	directory = "/Applications/VPS_JSON/vpsTestData/" //directory for mac
	}

	
def testData = context.expand( '${#Project#testData-promoSpecifScenario}' ) //modify this based on test case
def filePath = directory + testData
def restResponse = new JsonSlurper().parseText(new File(filePath).text)
def prettyJson = new groovy.json.JsonBuilder(restResponse).toPrettyString()</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="setVariables" id="7f3ca0fd-587f-4c2b-b47d-63199948b3a4">
    <con:settings/>
    <con:config>
      <script>//set variables from the fetched test data needed for the REST request
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


//get data from promoSpecificScenario
def promotionId = context.expand( '${loadTestData-promoSpecifScenario#result#$[\'promoSpecifScenario\'][\'TO\'][\'TOUnrestricted\'][\'promoID\']}' )
log.info(promotionId);
testRunner.testCase.setPropertyValue("promotionId",promotionId);

def promoCode = context.expand( '${loadTestData-promoSpecifScenario#result#$[\'promoSpecifScenario\'][\'TO\'][\'TOUnrestricted\'][\'promoCodes\'][0]}' )
log.info(promoCode);
testRunner.testCase.setPropertyValue("promoCode",promoCode);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="promoCodeBefore" id="7a09600b-3eb5-4e05-873c-c059ce0b7cfd">
    <con:settings/>
    <con:config service="Promotion(Ingress)(Used by ESL)" resourcePath="/v1/promo-code" methodName="promo-code" xsi:type="con:RestRequestStep">
      <con:restRequest name="promoCodeBefore" id="81525105-f44a-468d-a869-ace5e09dba3d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:request>{
   "key" : {
      "promotionId" : "${#TestCase#promotionId}",
      "promoCode" : "${#TestCase#promoCode}"
   }
}</con:request>
        <con:originalUri>http://vps-stg-a.rccl.com/vps-sierra/promotion/v1/promo-code</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a3f433e3-5c19-4db4-b7af-a9a46c0b2f63" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="0ee7086d-6479-408e-881c-7516e4a18ff9" name="Script Assertion">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def promoCode = parse.promoCode
log.info promoCode
assert promoCode!=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="9ba133c3-3cd7-45c8-8561-64ce1c92ea67">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="015736b2-7549-4743-94e6-d64278e45b46">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="e94bb75c-7f53-42a7-9f97-eb5aa3fcaf53">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b2abf588-b45c-4e44-9dd0-8b2249bbc4e7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="5322014d-43c7-4904-af96-4329a0290c25">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="495bcf82-3dfa-4956-b162-f0b1bfb07f10">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="feba3ebd-aeec-4c25-8b24-4b9e406c22cb">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b3e5490d-8b80-49fe-97a2-a82077345345">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="a98aa22f-37cb-4a0e-84c6-f2de81903489">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="fetchResponse" id="39d0d4b5-c130-43da-9029-079b7279fcfe">
    <con:settings/>
    <con:config>
      <script>//fetch the REST response
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


def restResponse = context.expand( '${promoCodeBefore#Response}' ); //modify this based on test case
def restResponse2 = new JsonSlurper().parseText(restResponse);
def prettyJson = new groovy.json.JsonBuilder(restResponse2).toPrettyString();</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="setFolderDirectory" id="0bae344c-5d3f-4702-b836-75b8a991a5f9">
    <con:settings/>
    <con:config>
      <script>//set folder directory for storing the response and create json file for storing REST response

String osType = System.properties['os.name'][0..6];
def directory = "";
String jsonFileName = "promoCodeTOUnRestricted.json" //modify this based on test case

if (osType == "Windows"){
	directory = "C:/VPS_JSON/vpsResponseBeforeMigration/" + jsonFileName
	}
else{
	directory = "/Applications/VPS_JSON/vpsResponseBeforeMigration/" + jsonFileName // directory for mac
	}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasink" name="storeResponse" id="06ff87ac-7f77-49f7-a3bd-c28b8d5200af">
    <con:settings/>
    <con:config xsi:type="con:DataSinkStep">
      <con:dataSink type="File">
        <con:configuration>
          <fileName>${setFolderDirectory#result}</fileName>
          <separator/>
          <escape/>
          <quote>false</quote>
          <trim>true</trim>
          <append>false</append>
          <encoding>UTF-8</encoding>
        </con:configuration>
      </con:dataSink>
      <con:properties>
        <con:property>
          <con:name>promoCodeTOUnRestricted</con:name>
          <con:value>${fetchResponse#result}</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>promotionId</con:name>
      <con:value>M8241569</con:value>
    </con:property>
    <con:property>
      <con:name>promoCode</con:name>
      <con:value>UNIQ4BY6Q6R1</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
