<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" id="a63b1c7e-9fa2-492e-b2b7-81859ea00d28" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="agency|Branch" searchProperties="true" timeout="0" disabled="true">
  <con:settings id="b9f7411c-64e4-4e7c-bfb7-472a3a651961">
    <con:setting id="a63b1c7e-9fa2-492e-b2b7-81859ea00d28fileName">agency%7CBranch</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="loadTestData" id="11aaf7a1-a016-4498-86fa-b02096a3ca53">
    <con:settings/>
    <con:config>
      <script>//load/fetch test data from an external json file
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//get OS and set directory based on OS
String osType = System.properties['os.name'][0..6];
def directory = "";

if (osType == "Windows"){
	directory = "C:/VPS_JSON/vpsTestData/"
	}
else{
	directory = "/Applications/VPS_JSON/vpsTestData/" //to insert directory for mac
	}

	
def testData = context.expand( '${#Project#testData-agency}' )
def filePath = directory + testData
def restResponse = new JsonSlurper().parseText(new File(filePath).text)
def prettyJson = new groovy.json.JsonBuilder(restResponse).toPrettyString()</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="setVariables" id="f9bb8c67-1592-426f-a764-bc489aecd3f5">
    <con:settings/>
    <con:config>
      <script>//set variables from the fetched test data needed for the REST request
import groovy.json.JsonSlurper
import groovy.json.JsonOutput



def agencyId = context.expand( '${loadTestData#result#$[\'agency\'][\'expedia\'][\'master\'][0][\'branches\'][1][\'clientId\']}' )
log.info(agencyId);
testRunner.testCase.setPropertyValue("agencyId",agencyId);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="agencyBefore" id="81ee8f26-225c-4167-aa66-8bcf5536b29b">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Agency" resourcePath="/v1/agency" methodName="agency" xsi:type="con:RestRequestStep">
      <con:restRequest name="agencyBefore" id="4a82a26e-3864-44ba-9782-c40057e7e3d8" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="Content-Type" value="application/json" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request>{
	"agencyId": "${#TestCase#agencyId}",
	"effectiveDateTime": "${#Project#effectiveDateTime}"
}</con:request>
        <con:originalUri>http://vps-stg-a.rccl.com/vps-sierra/agency/v1/agency</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="7597b402-8c9f-43db-b49a-ee2d3f48d791" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="3094891c-13d5-406c-bea0-6e552bbce428" name="Script Assertion">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def agencyId = parse.agency.agencyId
log.info agencyId
assert agencyId!=null


def agencyDetail = parse.agency.agencyDetail
log.info agencyDetail
assert agencyDetail!=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="9ba133c3-3cd7-45c8-8561-64ce1c92ea67">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="015736b2-7549-4743-94e6-d64278e45b46">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="e94bb75c-7f53-42a7-9f97-eb5aa3fcaf53">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b2abf588-b45c-4e44-9dd0-8b2249bbc4e7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="5322014d-43c7-4904-af96-4329a0290c25">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="495bcf82-3dfa-4956-b162-f0b1bfb07f10">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="feba3ebd-aeec-4c25-8b24-4b9e406c22cb">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b3e5490d-8b80-49fe-97a2-a82077345345">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="a98aa22f-37cb-4a0e-84c6-f2de81903489">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="fetchResponse" id="d064b439-a8b7-4c56-a5a0-eb3fe3803602">
    <con:settings/>
    <con:config>
      <script>//fetch the REST response
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


def agencyResponse = context.expand( '${agencyBefore#Response}' );
def agencyResponse2 = new JsonSlurper().parseText(agencyResponse);
def prettyJson = new groovy.json.JsonBuilder(agencyResponse2).toPrettyString();</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="setFolderDirectory" id="ebaaa5bd-d45d-4c29-aab3-62e529a9331a">
    <con:settings/>
    <con:config>
      <script>//set folder directory for storing the response

String osType = System.properties['os.name'][0..6];
def directory = "";
String jsonFileName = "agencyBranch.json"

if (osType == "Windows"){
	directory = "C:/VPS_JSON/vpsResponseBeforeMigration/" + jsonFileName
	}
else{
	directory = "/Applications/VPS_JSON/vpsResponseBeforeMigration/" + jsonFileName // to insert directory for mac
	}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasink" name="storeResponse" id="8111a717-65cc-4868-8f7a-4caa7ee2e1b0">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSinkStep">
      <con:dataSink type="File">
        <con:configuration>
          <fileName>${setFolderDirectory#result}</fileName>
          <separator/>
          <escape/>
          <quote>false</quote>
          <trim>true</trim>
          <append>false</append>
          <encoding>UTF-8</encoding>
        </con:configuration>
      </con:dataSink>
      <con:properties>
        <con:property>
          <con:name>agencyBranch</con:name>
          <con:value>${fetchResponse#result}</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>agencyId</con:name>
      <con:value>362291</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
